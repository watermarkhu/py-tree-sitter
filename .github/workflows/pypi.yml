name: Upload to PyPI

on:
  push:
    tags: ["v*"]

jobs:
  build-wheels:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - { os: windows-2022,     cibw_arch: AMD64 }
          - { os: windows-2022,     cibw_arch: ARM64 }
          - { os: ubuntu-24.04,     cibw_arch: x86_64 }
          - { os: ubuntu-24.04-arm, cibw_arch: aarch64 }
          - { os: macos-14,         cibw_arch: arm64 }
          - { os: macos-13,         cibw_arch: x86_64 }
    steps:
      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build wheels
        run: |
          uv sync --dev
          uv build
      
      - name: Audit wheels
        run: |
          uv run auditwheel repair dist/*.whl

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: dist-wheels-${{matrix.os}}-${{matrix.cibw_arch}}
          path: |
            dist/*.tar.gz
            wheelhouse/*.whl
          retention-days: 2

  release:
    runs-on: ubuntu-latest
    needs: [build-wheels]
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: dist-*
          merge-multiple: true

      - name: Check artifacts
        run: ls -l dist

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v6

      - name: Publish package distributions to PyPI
        run: |
          uv publish

      - name: Publish package distributions to GitHub Releases
        id: publish-dist
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            dist/*.whl
            dist/*.tar.gz
